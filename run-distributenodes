#!/usr/bin/env sh
dir=$(dirname "$0")

ERROR()
{
  printf 'error: '
  printf "$@"
  printf '\n'
  exit 1
}

USAGE()
{
  if [ -n "$1" ]
  then
    printf 'error: '
    printf "$@"
    printf '\n'
  fi
  echo usage: $(basename "$0") '[options] bitmarkd-arguments...'
  echo '       --help             -h            this message'
  echo '       --verbose          -v            more messages'
  echo '       --ntype=TYPE   -t    TYPE   type of node'
  echo '       --config=FILE      -c FILE       set configuration file ['"${config}"']'
  echo '                                        or %1..%99 or %T1..%T99 or %L1..%L99'
  echo '       --sleep=SECONDS    -s SECONDS    start delay'
  echo '       --debug                           debuging messages'
  exit 1
}

getopt=
case "$(uname)" in
  (FreeBSD|DragonFly)
    getopt=/usr/local/bin/getopt
    ;;
  (NetBSD)
    getopt=/usr/pkg/bin/getopt
    ;;
  (OpenBSD)
    getopt=/usr/local/bin/gnugetopt
    ;;
  (Darwin)
    getopt=/usr/local/opt/gnu-getopt/bin/getopt
    ;;
  (Linux)
    getopt=/usr/bin/getopt
    ;;
  (*)
    ERROR 'OS: %s is not supported' "$(uname)"
    ;;
esac
[ -x "${getopt}" ] || ERROR 'getopt: "%s" is not executable or not installed' "${getopt}"

args=$(${getopt} -o hvc:grf:s:D --long=help,verbose,ntype:,config:,sleep:,debug -- "$@") || exit 1

# replace the arguments with the parsed values
eval set -- "${args}"
echo  "ARGS:${args}"
### START MAIN RUN
while :
do
  case "$1" in
    (-v|--verbose)
      verbose=yes
      ;;
    (-t|--ntype)
      nodetype="$2"
      echo "nodetype:$nodetype"
      shift
      ;;
    (-c|--config)
      case "$2" in
        (%[1-9]|%[1-9][0-9]|%T[1-9]|%T[1-9][0-9]|%L[1-9]|%L[1-9][0-9])
          n="${2#%}"
          config="$HOME/wks_go/src/distributeNodes/testing/${nodetype}/${nodetype}${n}.conf"
          echo "run config-file=$config"
          ;;
        (%*)
          ERROR 'unsupported config shortcut: %s' "$2"
          ;;
        (*)
          config="$2"
          ;;
      esac
      shift
      ;;
    (-s|--sleep)
      sleep="$2"
      [ -z "${sleep}" ] && USAGE 'sleep cannot be blank'
      [ -z "$(printf '%s' "${sleep}" | tr -d '[0-9]')" ] || USAGE 'sleep value: "%s" is not a number' "${sleep}"
      shift
      ;;
    (-D|--debug)
      debug=yes
      ;;

    (--)
      shift
      break
      ;;

    (-h|--help)
      USAGE
      ;;

    (*)
      USAGE 'invalid option: %s' "$1"
      ;;
  esac
  shift
done

## Verify arguments
[ -f "${config}" ] || USAGE 'configuration file: "%s" does not exist' "${config}"
config_dir=$(dirname "${config}")

# enable debuging
[ X"${debug}" = X"yes" ] && set -x


### Start to start program
echo starting bitmarkd...

# finally run the program
while :
do
  printf 'configuration: %s\n' "${config}"
  export GODEBUG=madvdontneed=1
  echo "use config=${config}"
  distributeNodes -conf="${config}" "$@"
  [ $# -ne 0 ] && break
  rc="$?"
  printf 'rc: %d\n' "${rc}"
  run_again 'bitmarkd' || break
done